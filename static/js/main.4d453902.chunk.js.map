{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","shouldRenderResetButton","visibleGoods","goods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","reverseValue","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAA0BF,IAAaP,EAASM,MAAQF,EACxDM,EAhCD,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKd,EAASiB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITd,GACFM,EAAaS,UAIfC,QAAQC,IAAId,EAAUH,GAEfM,EAQcY,CACnBrB,EACA,CAAEM,WAAUH,eAcd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CACE,WAAYlB,IAAaP,EAASe,WAEtCW,QApB8B,kBAAMlB,EAAYR,EAASe,WAc3D,iCAWA,wBACES,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,WAAYlB,IAAaP,EAASiB,SAEtCS,QA7BwB,kBAAMlB,EAAYR,EAASiB,SAuBrD,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,YAAarB,IAEjBsB,QAtCmB,kBAAMrB,GAAW,SAAAsB,GAAY,OAAKA,MAgCvD,qBAYGlB,GACC,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA9Ca,WACvBrB,GAAW,GACXG,EAAYR,EAASM,OAyCb,sBAWN,6BACGI,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d453902.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const shouldRenderResetButton = sortType !== SortType.NONE || isReversed;\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const handleSortAlphabeticallyClick = () => setSortType(SortType.ALPHABET);\n\n  const handleSortByLengthClick = () => setSortType(SortType.LENGTH);\n\n  const handleReverseClick = () => setReverse(reverseValue => !reverseValue);\n\n  const handleResetClick = () => {\n    setReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          onClick={handleSortAlphabeticallyClick}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n          onClick={handleSortByLengthClick}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            {\n              'is-light': !isReversed,\n            })}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {\n          (shouldRenderResetButton) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleResetClick}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}